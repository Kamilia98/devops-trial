name: Docker Build and Push

on: push

jobs:
  test:
    name: Unit testing
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Run tests
        id: test
        run: npm test

      - name: Archive Test Result
        if: failure() || success()
        uses: actions/upload-artifact@v4
        with:
          name: Mocha-Test_Result
          path: test-results.xml

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Run Coverage
        id: coverage
        continue-on-error: true
        run: npm run coverage

      - name: Archive Test Result
        if: failure() || success()
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-result
          path: coverage

  build-and-push:
    runs-on: ubuntu-latest
    needs: [coverage, test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/my-image:latest
